# Default values for signalfx-smart-gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# nameOverride -- Overrides the name of the Helm chart
nameOverride: ""
# fullnameOverride -- Overrides the full name of the Helm chart
fullnameOverride: ""

# image -- Configurations for the docker image to be deployed
image:
  # image.pullPolicy -- The policy for pulling the image
  pullPolicy: IfNotPresent
  # image.repository -- The image to pull (REQUIRED)
  repository: ""
  # image.tag -- The image tag to pull (REQUIRED)
  tag: ""
  # image.pullSecrets -- (list) The list of image Kubernetes Image Pull Secrets to use when pulling images
  pullSecrets:

# signalFxAccessToken -- The SignalFx Access Token used to send Datapoints, Events, and Traces to SignalFx (REQUIRED)
signalFxAccessToken: ""

# clusterName -- The name of the SignalFx Smart Gateway cluster (REQUIRED)
clusterName: ""

# targetClusterAddresses -- (list) A list of etcd client addresses to connect to (REQUIRED)
targetClusterAddresses:

# listeners -- SignalFx Smart Gateway listener config objects (These are merged into the `gateway.conf.ListenFrom` list)
listeners: [
  # listeners[0] -- The default SignalFx listener
  {
      # listeners[0].Name -- The name of the SignalFx listener
      "Name": "signalfxlistener",
      # listeners[0].Type -- The type of the SignalFx listener
      "Type": "signalfx",
      # listeners[0].ListenAddr -- The address to listen on for requests
      "ListenAddr": "0.0.0.0:18080",
      # listeners[0].RemoveSpanTags -- The list of rules for excluding span tags
      "RemoveSpanTags": []
  }
]

# forwarders -- Additional SignalFx Smart Gateway forwarder config objects (These will be merged into the `gateway.conf.ForwardTo` list)
forwarders: []

# gateway -- Configurations for SignalFx Smart Gateway nodes
gateway:
  # gateway.configMountPoint -- the config map mount point for the pod
  configMountPoint: /var/lib/gateway/etc
  # gateway.count -- The number of SignalFx Smart Gateways to deploy
  count: 1
  # gateway.advertisedSFXListenerAddress -- An environment variable that will be set in the gateway pod. It is used to configure the SignalFx Smart Samplers to advertise their configured SignalFx Listener in the cluster. By default it is set to `$(POD_IP):<PORT>` which is filled in by Kubernetes.
  advertisedSFXListenerAddress: $(POD_IP):18080
  # gateway.advertisedSFXRebalanceAddress -- An environment variable that will be set in the gateway pod.  It is used to configure the SignalFx Smart Samplers to advertise their configured rebalance address in the cluster.  By default it is set to `$(POD_IP):<PORT>` which is filled in by Kubernetes.
  advertisedSFXRebalanceAddress: $(POD_IP):2382
  # gateway.annotations -- A list of key/value objects representing annotations to apply to the pods.
  annotations:
    # gateway.annotations[0] -- An annotation to configure the internal-metrics monitor on the SignalFx Smart Agent to monitor the Smart Gateway.
    - agent.signalfx.com/monitorType.2383: internal-metrics
    # gateway.annotations[1] -- An annotation to configure the path on the SignalFx Smart Agent's internal-metrics monitor to scrape metrics from the Smart Gateway.
    - agent.signalfx.com/config.2383.path: /internal-metrics
    # gateway.annotations[2] -- An annotation to configure the SignalFx Smart Agent's internal-metrics monitor to overwrite the host dimension resolved by the SignalFx Smart Gateway.
    - agent.signalfx.com/config.2383.dimensionTransformations: '{host: ""}'
  # gateway.conf -- The SignalFx Smart Gateway's config file.  You can directly set additional configurations by specifying their path like this: `--set gateway.conf.<GATEAY CONFIG KEY>=`.
  conf:
    # gateway.conf.InternalMetricsListenerAddress -- The address and port to serve metrics about the gateway
    InternalMetricsListenerAddress: "0.0.0.0:2383"
    # gateway.conf.EmitDebugMetrics -- turn debug level metrics about the Smart Gateway on or off.
    EmitDebugMetrics: false
    # gateway.conf.LogDir -- The directory to log to.  The SignalFx Smart Gateway will log to `stdout` when `gateway.conf.LogDir` is set to `-`.
    LogDir: "-"
    # gateway.conf.ListenFrom -- The SignalFx Smart Gateway listeners.  This list is merged with the `listeners` list.
    ListenFrom: []
    # gateway.conf.ForwardTo -- The SignalFx Smart Gateway forwarders.  This list is merged with the `forwarders` list.
    ForwardTo: [
      # gateway.conf.ForwardTo[0] -- The default SignalFx forwarder
      {
        # gateway.conf.ForwardTo[0].Name -- The name of the SignalFx forwarder
        "Name": "signalfxforwarder",
        # gateway.conf.ForwardTo[0].Type -- The type of the SignalFx forwarder
        "Type": "signalfx",
        # gateway.conf.ForwardTo[0].AuthTokenEnvVar -- The environment variable to read to configure the SignalFx Access Token
        "AuthTokenEnvVar": "SFX_AUTH_TOKEN",
        # gateway.conf.ForwardTo[0].TraceSample -- Configurations for the SignalFx Smart Sampler
        "TraceSample": {
          # gateway.conf.ForwardTo[0].TraceSample.ListenRebalanceAddress -- The address to listen on for cluster rebalancing
          "ListenRebalanceAddress": "0.0.0.0:2382",
          # gateway.conf.ForwardTo[0].TraceSample.BackupLocation -- The location inside the container to back up sampling data
          "BackupLocation": "/var/lib/gateway/data"
        }
      }
    ]
  # gateway.containerPorts -- A list of Kubernetes container port definitions to apply to the container
  containerPorts:
    # gateway.containerPorts[0].name -- The name of the SignalFx listener container port
  - name: sfx-listener
    # gateway.containerPorts[0].containerPort -- The SignalFx listener port
    containerPort: 18080
    # gateway.containerPorts[0].protocol -- The protocol of the SignalFx listener
    protocol: TCP
    # gateway.containerPorts[1].name -- The name of the SignalFx forwarder's rebalance port
  - name: sfx-rebalance
    # gateway.containerPorts[1].containerPort -- The port of the SignalFx Forwarder's rebalance server
    containerPort: 2382
    # gateway.containerPorts[1].protocol -- The protocol used by the SignalFx Forwarder's rebalance server
    protocol: TCP
    # gateway.containerPorts[2].name -- The name of the internal metrics server
  - name: sfx-int-metrics
    # gateway.containerPorts[2].containerPort -- The port of the internal metrics server
    containerPort: 2383
    # gateway.containerPorts[2].protocol -- The protocol used by the internal metrics server
    protocol: TCP
  # gateway.livenessProbe -- A Kubernetes liveness probe to determine the health of the container
  livenessProbe:
    httpGet:
      path: /healthz
      port: sfx-listener
    initialDelaySeconds: 15
  # gateway.readinessProbe -- A Kubernetes readiness probe used to determine when the container is ready
  readinessProbe: {}
  # gateway.resources -- Kubernetes deployment resources
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  # gateway.nodeSelector -- Kubernetes node selectors to apply to the pod
  nodeSelector: {}
  # gateway.tolerations -- Kubernetes deployment tolerations to apply to the pod
  tolerations: []
  # gateway.affinity -- Kubernetes affinity configuriations to apply to the pod
  affinity: {}
  # gateway.volumes -- Kubernetes volumes to apply to the pod
  volumes: []
  # gateway.volumeMounts -- Kubernetes volume mounts to apply to the container
  volumeMounts: []
  # gateway.volumeClaimTemplates -- Volume claim templates to attach to replicas
  volumeClaimTemplates: []

# service -- Configurations for the Kubernetes service exposing the SignalFx Smart Gateway's SignalFx listener
service:
  # service.type -- The service type
  type: ClusterIP
  # service.ports -- Ports to configure on the service
  ports:
      # service.ports[0].port -- The port to use on the service
    - port: 18080
      # service.ports[0].targetPort -- The name of the container port to send requests to
      targetPort: sfx-listener
      # service.ports[0].protocol -- The protocol of the service
      protocol: TCP
      # service.ports[0].nameSuffix -- A suffix to apply to the port name
      nameSuffix: sfx-listener

ingress:
  enabled: false
